(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{489:function(t,e,a){"use strict";a.r(e);var n=a(70),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),a("h2",{attrs:{id:"起步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起步"}},[t._v("#")]),t._v(" 起步")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm i creat-react-app -g\n\ncerate-react-app demo\n")])])]),a("h2",{attrs:{id:"基本写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本写法"}},[t._v("#")]),t._v(" 基本写法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { Component,Fragment } from 'react'\n\nclass App extends Component {\n    render() {\n        return (\n            <Fragment>\n                <ul className=\"my-list\">\n                    <li>1</li>\n                    <li>2</li>\n                </ul>\n                <div>1</div>\n            </Fragment>\n        )\n    }\n}\n\nexport default App\n")])])]),a("h2",{attrs:{id:"fragment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[t._v("#")]),t._v(" Fragment")]),t._v(" "),a("p",[t._v("相当于vue的template")]),t._v(" "),a("h2",{attrs:{id:"state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" state")]),t._v(" "),a("p",[t._v("相当于vue data")]),t._v(" "),a("p",[t._v("在class中写")]),t._v(" "),a("p",[t._v("不可以直接改变this.state.xx的值，会有性能问题")]),t._v(" "),a("p",[t._v("改变")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("this.setState({\n\n\txx: xx\n\n})\n\n")])])]),a("h2",{attrs:{id:"innerhtml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innerhtml"}},[t._v("#")]),t._v(" innerhtml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dangerouslySetInnerHTML={{__html:item}}\n")])])]),a("h2",{attrs:{id:"label-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label-for"}},[t._v("#")]),t._v(" label for")]),t._v(" "),a("p",[t._v("htmlFor")]),t._v(" "),a("h2",{attrs:{id:"组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" <Item content={item} index={index} delList={this.delList} />\n \n this.props.xx接收\n 直接将方法传过去 不用发送事件\n")])])]),a("h2",{attrs:{id:"props校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props校验"}},[t._v("#")]),t._v(" props校验")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import PropTypes from 'prop-types'\n\nitem为组件名\nitem.propTypes = {\n    name: PropTypes.string.isRequired,\n    content: PropTypes.string,\n    index: PropTypes.number,\n    delList: PropTypes.func\n}\nitem.defaultProps= {\n    name: 'dd'\n}\n")])])]),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<input \n    value={this.state.inputValue} \n    onChange={this.inputChange.bind(this)} \n    ref={(input) => { this.input = input}}\n/>\n\n然后直接this.input使用即可 获取到了dom元素\n")])])]),a("h2",{attrs:{id:"优化更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化更新"}},[t._v("#")]),t._v(" 优化更新")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("shouldComponentUpdate(nextProps,nextState){\n    if(nextProps.content !== this.props.content){\n        return true\n    }else{\n        return false\n    }\n\n}\n")])])]),a("h2",{attrs:{id:"transition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transition"}},[t._v("#")]),t._v(" transition")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install react-transition-group --save\n\nimport { CSSTransition } from 'react-transition-group'\n\n# dom \n\n<CSSTransition\n    in={this.state.isShow}   //用于判断是否出现的状态\n    timeout={2000}           //动画持续时间\n    classNames=\"boss-text\"   //className值，防止重复\n    unmountOnExit            //动画结束删除元素\n>\n    <div>BOSS级人物-孙悟空</div>\n</CSSTransition>\n\n# css\n\n.boss-text-enter{\n    opacity: 0;\n}\n.boss-text-enter-active{\n    opacity: 1;\n    transition: opacity 2000ms;\n\n}\n.boss-text-enter-done{\n    opacity: 1;\n}\n.boss-text-exit{\n    opacity: 1;\n}\n.boss-text-exit-active{\n    opacity: 0;\n    transition: opacity 2000ms;\n\n}\n.boss-text-exit-done{\n    opacity: 0;\n}\n")])])]),a("p",[t._v("多个")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<TransitionGroup>\n    {\n        this.state.list.map((item, index) => {\n            return (\n                <CSSTransition\n                    timeout={1000}\n                    classNames='boss-text'\n                    unmountOnExit\n                    appear={true}\n                    key={index + item}\n                >\n                    <Item\n                        content={item}\n                        index={index}\n                        deleteItem={this.delList.bind(this)}\n                    />\n                </CSSTransition>\n            )\n        })\n    }\n</TransitionGroup>\n")])])]),a("h1",{attrs:{id:"redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),a("h2",{attrs:{id:"ant-design"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ant-design"}},[t._v("#")]),t._v(" ant-design")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" npm i antd\n")])])]),a("h2",{attrs:{id:"建store文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建store文件夹"}},[t._v("#")]),t._v(" 建store文件夹")]),t._v(" "),a("p",[t._v("index.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer)\nexport default store\n")])])]),a("p",[t._v("reducer.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { CHANGE_INPUT, ADD_LIST, DEL_LIST} from './actionTypes'\n\nconst defaultState = {\n    inputValue: 'write something',\n    data: [\n        '早8点开晨会，分配今天的开发工作',\n        '早9点和项目经理作开发需求讨论会',\n        '晚5:30对今日代码进行review'\n    ]\n}\n\n\nexport default (state = defaultState, action) => {\n    console.log(state, action)\n    if (action.type === CHANGE_INPUT) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.inputValue = action.value\n        return newState\n    } else if (action.type === ADD_LIST) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.data.unshift(action.value)\n        newState.inputValue = ''\n        return newState\n    } else if (action.type === DEL_LIST) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.data.splice(action.value, 1)\n        return newState\n    }\n    \n    return state\n}\n")])])]),a("p",[t._v("actionTypes.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export const CHANGE_INPUT = 'changeInput'\nexport const ADD_LIST = 'addList'\nexport const DEL_LIST = 'delList'\n\n")])])]),a("p",[t._v("actionCreator.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { CHANGE_INPUT, ADD_LIST, DEL_LIST} from './actionTypes'\n\nexport const changeInputAction = value => ({\n    type: CHANGE_INPUT,\n    value\n})\n\nexport const addList = value => ({\n    type: ADD_LIST,\n    value\n})\n\nexport const delList = value => ({\n    type: DEL_LIST,\n    value\n})\n")])])]),a("p",[t._v("在需要的组件中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import store from './store'\nimport { changeInputAction, addList, delList } from './store/actionCreators'\n\nthis.state = store.getState()\n// 订阅\nstore.subscribe(this.storeChange)\n\nstoreChange () {\n    this.setState(store.getState())\n}\n\n# 点击事件\nclickBtn () {\n    store.dispatch(changeInputAction(value))\n}\n")])])]),a("h2",{attrs:{id:"ui分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui分离"}},[t._v("#")]),t._v(" ui分离")]),t._v(" "),a("p",[t._v("ui")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react';\nimport 'antd/dist/antd.css'\nimport { Input , Button , List } from 'antd'\n\nconst TodoListUI = (props) => {\n    return (\n        <div style={{margin:'10px'}}>\n            <div>\n                <Input \n                    placeholder={props.inputValue} \n                    style={{ width:'250px', marginRight:'10px'}}\n                    onChange={props.inputChange}\n                    value={props.inputValue}\n                />\n                <Button \n                    type=\"primary\"\n                    onClick={props.clickBtn}\n                >增加</Button>\n            </div>\n            <div style={{margin:'10px',width:'300px'}}> \n                <List\n                    bordered\n                    dataSource={props.data}\n                    renderItem={(item, index)=>(<List.Item onClick={() => {props.deleteItem(index)}}>{item}</List.Item>)}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default TodoListUI;\n")])])]),a("p",[t._v("js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("render() { \n        return ( \n            <TodoListUI \n                inputValue={this.state.inputValue}\n                inputChange={this.inputChange}\n                clickBtn={this.clickBtn}\n                data={this.state.data}\n                deleteItem={this.deleteItem}\n            />\n        );\n    }\n")])])]),a("h2",{attrs:{id:"axios存数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios存数据"}},[t._v("#")]),t._v(" axios存数据")]),t._v(" "),a("p",[t._v("在生命周期获取后dispatch然后reducre接收改变即可")]),t._v(" "),a("h2",{attrs:{id:"redux-thunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux-thunk"}},[t._v("#")]),t._v(" redux-thunk")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm i redux-thunk\n\nimport thunk from 'redux-thunk'\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n)\n\n\nexport const getTodoList = () => {\n    return (dispatch) => {\n        axios.get('http://rap2api.taobao.org/app/mock/243469/list').then(res => {\n            dispatch(getList(res.data.list))\n        })\n    }\n}\n\nstore.dispatch(getTodoList())\n\n")])])]),a("h2",{attrs:{id:"sage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sage"}},[t._v("#")]),t._v(" sage")]),t._v(" "),a("p",[t._v("不想整")]),t._v(" "),a("h2",{attrs:{id:"react-redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-redux"}},[t._v("#")]),t._v(" react-redux")]),t._v(" "),a("p",[t._v("provider包裹")]),t._v(" "),a("p",[t._v("组件connect一下")]),t._v(" "),a("h1",{attrs:{id:"react-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[t._v("#")]),t._v(" react-router")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm i react-router-dom\n")])])]),a("h2",{attrs:{id:"approuter-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#approuter-js"}},[t._v("#")]),t._v(" AppRouter.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Index from './Pages/Index'\nimport List from './Pages/List'\n\nfunction AppRouter() {\n    return (\n        <Router>\n            <ul>\n                <li><Link to=\"/\">首页</Link></li>\n                <li><Link to=\"/list/111\">列表</Link></li>\n            </ul>\n            <Route path=\"/\" exact component={Index} />\n            <Route path=\"/list/:id\" component={List} />\n        </Router>\n    )\n}\n\nexport default AppRouter\n")])])]),a("h2",{attrs:{id:"获取值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取值"}},[t._v("#")]),t._v(" 获取值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("this.props.match中\n")])])]),a("h2",{attrs:{id:"重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[t._v("#")]),t._v(" 重定向")]),t._v(" "),a("ol",[a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('this.props.history.push("/home/")\n')])])])]),t._v(" "),a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import { Link , Redirect } from "react-router-dom";\n\n <Redirect to="/home/" />\n')])])])])]),t._v(" "),a("h1",{attrs:{id:"react-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks"}},[t._v("#")]),t._v(" react-hooks")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { useState } from 'react';\n\nfunction App() {\n    const [count, setCount] = useState(0)\n    return (\n        <div>\n            <p>click {count}</p>\n            <button onClick={() => {setCount(count+1)}}>click</button>\n        </div>\n    )\n}\n\nexport default App;\n")])])]),a("h1",{attrs:{id:"yarn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[t._v("#")]),t._v(" yarn")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install -g yarn\n\nyarn --version\n")])])]),a("p",[t._v("Yarn 淘宝源安装，分别复制粘贴以下代码行到黑窗口运行即可\n"),a("code",[t._v("yarn config set registry https://registry.npm.taobao.org -g")]),t._v(" "),a("code",[t._v("yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g")])]),t._v(" "),a("p",[t._v("https://blog.csdn.net/idomyway/article/details/88411836")]),t._v(" "),a("h1",{attrs:{id:"next-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-js"}},[t._v("#")]),t._v(" next.js")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("yarn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" create"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("app\ncreate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("app my"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("project\ncd my"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("project\nyarn dev\n")])])]),a("h2",{attrs:{id:"支持引入css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持引入css"}},[t._v("#")]),t._v(" 支持引入css")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn add @zeit/next-css\n")])])]),a("p",[t._v("根目录新建next.config.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const withCss = require('@zeit/next-css')\n\nif(typeof require !== 'undefined'){\n    require.extensions['.css']=file=>{}\n}\n\nmodule.exports = withCss({})\n")])])]),a("h2",{attrs:{id:"导航"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导航"}},[t._v("#")]),t._v(" 导航")]),t._v(" "),a("p",[t._v("标签方式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import Link from \'next/link\'\n\n<Link href="/index">\n    <a><span className="header-logo">小小前端儿</span></a>\n</Link>\n')])])]),a("p",[t._v("js方式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import Router from 'next/router'\n\n\nconst handleClick = (e) => {\n    console.log(e)\n    if (e.key == 0) {\n        Router.push('/index')\n    } else {\n        Router.push('/blogList?id=' + e.key)\n    }\n}\n\n\n<Menu\n    mode=\"horizontal\"\n    onClick={handleClick}\n>\n    {\n        navArray.map((item) => {\n            return (\n                <Menu.Item key={item.Id}>\n                    <Icon type={item.icon} />\n                    {item.typeName}\n                </Menu.Item>\n            )\n        })\n    }\n</Menu>\n")])])]),a("h2",{attrs:{id:"动态引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态引入"}},[t._v("#")]),t._v(" 动态引入")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import dynamic from 'next/dynamic'\nimport '../public/style/pages/index.css'\nconst DynamicRibbon = dynamic(\n    import('../assets/ribbon'),\n    {\n      ssr: false   //这个要加上,禁止使用 SSR\n    }\n)\n\n<DynamicRibbon/>\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);