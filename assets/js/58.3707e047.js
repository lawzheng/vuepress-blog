(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{468:function(v,_,t){"use strict";t.r(_);var a=t(38),e=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"自动检测页面缺失依赖及自动测试页面是否报错"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动检测页面缺失依赖及自动测试页面是否报错"}},[v._v("#")]),v._v(" 自动检测页面缺失依赖及自动测试页面是否报错")]),v._v(" "),_("h2",{attrs:{id:"背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[v._v("#")]),v._v(" 背景")]),v._v(" "),_("p",[v._v("因做首页优化时，去除了许多非首页的依赖文件，导致单独打开某些页面时会报错。原因是以前首页加载了其需要的依赖，而该组件自己并没有写上所有需要的依赖文件到"),_("code",[v._v("deps")]),v._v("中，所以导致的报错。")]),v._v(" "),_("p",[v._v("于是通过两种方式来解决这类问题：")]),v._v(" "),_("ol",[_("li",[v._v("扫描所有文件需要的依赖，并补上")]),v._v(" "),_("li",[v._v("自动测试打开页面是否报错")])]),v._v(" "),_("h2",{attrs:{id:"扫描所有文件需要的依赖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#扫描所有文件需要的依赖"}},[v._v("#")]),v._v(" 扫描所有文件需要的依赖")]),v._v(" "),_("p",[v._v("那么怎么扫描组件需要的依赖呢？")]),v._v(" "),_("h3",{attrs:{id:"思路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[v._v("#")]),v._v(" 思路")]),v._v(" "),_("p",[v._v("这里通过"),_("code",[v._v("node.js")]),v._v("扫描页面、业务组件文件夹中的所有js文件，")]),v._v(" "),_("p",[v._v("通过正则：")]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token regex"}},[_("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[v._v("/")]),_("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[v._v("((B|SFX)(\\.[a-zA-Z1-9]+)+)")]),_("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[v._v("/")]),_("span",{pre:!0,attrs:{class:"token regex-flags"}},[v._v("g")])]),v._v("\n")])])]),_("p",[v._v("匹配出"),_("code",[v._v("B.xx.xx")]),v._v("以及"),_("code",[v._v("SFX.xx.xx")]),v._v("的依赖名字，")]),v._v(" "),_("p",[v._v("排除掉无需新写的依赖（首页加载过、是注释了的等情况），（其中通过gulp打包压缩去掉了注释后再扫描）。")]),v._v(" "),_("p",[v._v("且该依赖文件实际存在，")]),v._v(" "),_("p",[v._v("通过这一系列排除，剩下的就是需要添加的。")]),v._v(" "),_("h3",{attrs:{id:"问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[v._v("#")]),v._v(" 问题")]),v._v(" "),_("p",[v._v("做完就来实验，通过"),_("code",[v._v("node.js")]),v._v("自动将依赖写入到"),_("code",[v._v("deps")]),v._v("文件中后，发现存在组件相互引用的，导致需要的依赖被提前加载。")]),v._v(" "),_("p",[v._v("该问题因时间有限，所以暂时没做处理，采用折中的办法：")]),v._v(" "),_("p",[v._v("只添加未写入依赖的公共组件，讲道理业务组件应该是有写的。")]),v._v(" "),_("h3",{attrs:{id:"结果"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#结果"}},[v._v("#")]),v._v(" 结果")]),v._v(" "),_("p",[v._v("通过扫描并添加缺失的公共组件依赖，解决了一部分页面报错。")]),v._v(" "),_("p",[v._v("源码见附件。")]),v._v(" "),_("h2",{attrs:{id:"自动测试页面是否报错"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动测试页面是否报错"}},[v._v("#")]),v._v(" 自动测试页面是否报错")]),v._v(" "),_("p",[v._v("因为还是存在页面报错，于是诞生了自动测试的想法。")]),v._v(" "),_("h3",{attrs:{id:"思路-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#思路-2"}},[v._v("#")]),v._v(" 思路")]),v._v(" "),_("h4",{attrs:{id:"获取需要测试的页面路径"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#获取需要测试的页面路径"}},[v._v("#")]),v._v(" 获取需要测试的页面路径")]),v._v(" "),_("p",[v._v("最开始是通过遍历导航栏的路由来获取所有页面，但是需要区分不同页面（控制器、交换机等）来获取路由。测试需要打开不同页面去测试。")]),v._v(" "),_("p",[v._v("后来发现在控制器中，搜索栏功能有记录所有能访问的页面，于是可以实现执行一次测试命令即跑完所有页面。")]),v._v(" "),_("h4",{attrs:{id:"打开测试页面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#打开测试页面"}},[v._v("#")]),v._v(" 打开测试页面")]),v._v(" "),_("p",[v._v("最开始是照着项目中已有的打开页面逻辑，通过"),_("code",[v._v("window.open")]),v._v("来打开新页面，但是这种方法存在不少缺陷：")]),v._v(" "),_("ol",[_("li",[v._v("浏览器自动获取焦点到新开tab上，测试期间无法处理别的事务。")]),v._v(" "),_("li",[v._v("同时测试多个页面效果不佳。因为浏览器对非活动的tab页面有限制，导致加载缓慢。")])]),v._v(" "),_("p",[v._v("于是改用"),_("code",[v._v("iframe")]),v._v("的方式。")]),v._v(" "),_("p",[v._v("通过"),_("code",[v._v("js")]),v._v("在当前页面动态创建出"),_("code",[v._v("iframe")]),v._v("，并将页面路径赋予它，即可解决上面所说的问题。")]),v._v(" "),_("h4",{attrs:{id:"如何记录报错页面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何记录报错页面"}},[v._v("#")]),v._v(" 如何记录报错页面")]),v._v(" "),_("p",[v._v("通过翻看源码，知道了页面加载都是在")]),v._v(" "),_("p",[_("code",[v._v("SF.framework.DeferPageWrap.prototype.delayLoadPage")])]),v._v(" "),_("p",[_("code",[v._v("SF.framework.DeferPageWrap.prototype.compositePage")])]),v._v(" "),_("p",[v._v("这两函数处理。")]),v._v(" "),_("p",[v._v("通过重写，判断当前在执行测试时，就记录报错。")]),v._v(" "),_("h4",{attrs:{id:"如何自动跑起来"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何自动跑起来"}},[v._v("#")]),v._v(" 如何自动跑起来")]),v._v(" "),_("p",[v._v("初始化测试命令的时候，会记录所有需要跑的页面（对搜索栏的数据加了去重），以及跑了的页面的数量索引。")]),v._v(" "),_("p",[v._v("然后还是在上面两个函数中，加载完页面后，取出下一个页面，并移除上一个页面的"),_("code",[v._v("iframe")]),v._v("。")]),v._v(" "),_("p",[v._v("在判断都跑完后，弹窗显示"),_("strong",[v._v("耗时")]),v._v("以及错误页面的名字、链接，方便打开。")]),v._v(" "),_("h3",{attrs:{id:"使用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[v._v("#")]),v._v(" 使用")]),v._v(" "),_("h4",{attrs:{id:"步骤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[v._v("#")]),v._v(" 步骤")]),v._v(" "),_("p",[v._v("思路讲完了，说说如何使用。")]),v._v(" "),_("ol",[_("li",[v._v("打开控制器首页")]),v._v(" "),_("li",[v._v("f12打开控制台")]),v._v(" "),_("li",[v._v("输入"),_("code",[v._v("SF.invoke('testPages')")])]),v._v(" "),_("li",[v._v("如果碰到意外停止的情况，可以通过控制台找到对应的iframe，改下它的src再改回来即可。")])]),v._v(" "),_("h4",{attrs:{id:"一些配置项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一些配置项"}},[v._v("#")]),v._v(" 一些配置项")]),v._v(" "),_("p",[v._v("可以通过"),_("code",[v._v("SF.invoke('testPages', options)")]),v._v("改变一些配置。")]),v._v(" "),_("p",[v._v("options为对象{}")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("配置项")]),v._v(" "),_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("debugMode")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("是否开始debug模式，开启则用debug模式打开页面")])]),v._v(" "),_("tr",[_("td",[v._v("maxFrameNum")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td",[v._v("同时打开多少个iframe窗口，默认2，不建议太多，实测2个与4个耗时一样，且越多会导致页面加载意外报错")])]),v._v(" "),_("tr",[_("td",[v._v("storeKey")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td",[v._v("存储报错数据的key，一般无需修改")])])])]),v._v(" "),_("h4",{attrs:{id:"对报错的修改方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对报错的修改方法"}},[v._v("#")]),v._v(" 对报错的修改方法")]),v._v(" "),_("p",[v._v("一般就是以下几种问题：")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("提示 “加载页面出错，请检查网络连接是否正常。”")]),v._v(" "),_("p",[v._v("这种是catjs返回的组件在执行时报错了，可以将返回的代码复制出来在控制台中执行，查看VMxxx的报错，就能看到是哪个文件报错了。补上依赖一般就好了。")])]),v._v(" "),_("li",[_("p",[v._v("提示 “页面初始化及布局出错!”")]),v._v(" "),_("p",[v._v("这种一般是页面报错了，通过在"),_("code",[v._v("SF.framework.DeferPageWrap.prototype.compositePage")]),v._v("函数中打断点，查看报错信息进行解决。")])]),v._v(" "),_("li",[_("p",[v._v("提示 xtype ...报错")]),v._v(" "),_("p",[v._v("表格用的xtype的组件没写入到依赖，在报错调用栈中打断点，找出出错的xtype，然后通过")]),v._v(" "),_("p",[_("code",[v._v("ext.reg('某个xtype')")]),v._v("（找不到时切换单双引号）找出该文件，写入依赖即可。")])])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("通过以上两种方法，解决了首次打开页面报错的问题。")]),v._v(" "),_("p",[v._v("并且是自动化的，大大缩短了测试时间（两百多个页面，手工测一遍起码需要一小时，通过自动测试，几分钟就能跑完一遍，并给出报错页面名单）。")])])}),[],!1,null,null,null);_.default=e.exports}}]);