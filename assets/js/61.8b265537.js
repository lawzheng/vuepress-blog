(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{468:function(t,s,a){"use strict";a.r(s);var e=a(38),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"xmind转自测系统导入格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmind转自测系统导入格式"}},[t._v("#")]),t._v(" xmind转自测系统导入格式")]),t._v(" "),s("p",[t._v("分两部分")]),t._v(" "),s("h2",{attrs:{id:"xmind-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmind-json"}},[t._v("#")]),t._v(" xmind-json")]),t._v(" "),s("h3",{attrs:{id:"读取xmind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取xmind"}},[t._v("#")]),t._v(" 读取xmind")]),t._v(" "),s("p",[t._v("直接使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.readFileSync\n")])])]),s("h3",{attrs:{id:"jszip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jszip"}},[t._v("#")]),t._v(" jszip")]),t._v(" "),s("p",[t._v("使用jszip解析xmind。直接fs读的话js无法操作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const zip = new JSZip();\n//解压缩xmind文件\nconst res = await zip.loadAsync(this.data, {\n    optimizedBinaryString: true\n});\n")])])]),s("p",[t._v("解析出的对象中的content.xml就是所需的数据")]),t._v(" "),s("p",[t._v("通过jszip的file方法将content.xml对象字符化")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("await res.file(file.name).async('string')\n")])])]),s("h3",{attrs:{id:"xml-formatter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml-formatter"}},[t._v("#")]),t._v(" xml-formatter")]),t._v(" "),s("p",[t._v("将content.xml字符转为正常格式的xml")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const format = require('xml-formatter')\n\nformat(fileVal, {\n\tcollapseContent: true\n})\n")])])]),s("h3",{attrs:{id:"xml-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml-js"}},[t._v("#")]),t._v(" xml-js")]),t._v(" "),s("p",[t._v("将xml转成json")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const convert = require('xml-js')\n\nconst json = JSON.parse(convert.xml2json(xml), {\n    compact: true,\n    spaces: 4\n}));\n")])])]),s("h3",{attrs:{id:"处理json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理json"}},[t._v("#")]),t._v(" 处理json")]),t._v(" "),s("p",[t._v("得到的json很多无用的层级、数据，需要进一步精简。同时对xmind中特殊符号需要进行处理")]),t._v(" "),s("p",[t._v("通过递归解析出树形结构")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let node = {\n    children: this.transformChildren(topic || children, imgFiles),\n    data: {\n        text: this.transformText(data),\n        remark: this.transformRemark(data),\n        label: this.transformLabel(data),\n        image: this.transformImage(data, imgFiles),\n        markers: this.transformMarker(data)\n    }\n};\n")])])]),s("h2",{attrs:{id:"json-xlsx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-xlsx"}},[t._v("#")]),t._v(" json-xlsx")]),t._v(" "),s("p",[t._v("对json按照自测平台的字段，递归解析出来。")]),t._v(" "),s("p",[t._v("再转为xlsx")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const xlsx = require('xlsx');\n\nlet ss = xlsx.utils.json_to_sheet(this.cases);\nlet workbook = {\n    SheetNames: ['测试用例'],\n    Sheets: {\n        '测试用例': Object.assign({}, ss)\n    },\n};\nxlsx.writeFile(workbook, this.output);\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);