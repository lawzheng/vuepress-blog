(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{445:function(e,n,t){"use strict";t.r(n);var a=t(70),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"禁止浏览器打开控制台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#禁止浏览器打开控制台"}},[e._v("#")]),e._v(" 禁止浏览器打开控制台")]),e._v(" "),t("p",[e._v("出于安全等方面的考虑，可以禁止浏览器打开控制台")]),e._v(" "),t("p",[e._v("有以下几种方式：")]),e._v(" "),t("h2",{attrs:{id:"禁止f12键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#禁止f12键"}},[e._v("#")]),e._v(" 禁止F12键")]),e._v(" "),t("p",[e._v("通过键盘事件判断键值===123时拦截即可")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("window.onkeydown = window.onkeyup = window.onkeypress = function (event) {\n    if (event.keyCode = 123) {\n        event.preventDefault(); // 阻止默认事件行为\n        window.event.returnValue = false;\n    }\n}\n")])])]),t("h2",{attrs:{id:"禁止右键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#禁止右键"}},[e._v("#")]),e._v(" 禁止右键")]),e._v(" "),t("p",[e._v("右键有查看源代码和打开控制台功能，通过右键事件拦截即可")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 为右键添加自定义事件，可以禁用\nwindow.oncontextmenu = function() {\n    event.preventDefault(); // 阻止默认事件行为\n    return false;\n}\n")])])]),t("h2",{attrs:{id:"检查是否已打开控制台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查是否已打开控制台"}},[e._v("#")]),e._v(" 检查是否已打开控制台")]),e._v(" "),t("p",[e._v("通过上面的两种方式可以阻止新手打开控制台，但是还是有别的办法能打开：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("选中地址栏再按F12")])]),e._v(" "),t("li",[t("p",[e._v("ctrl+shift+i")])]),e._v(" "),t("li",[t("p",[e._v("浏览器的菜单里找")])]),e._v(" "),t("li",[t("p",[e._v("事先打开控制台再访问页面")])]),e._v(" "),t("li",[t("p",[e._v("。。。")])])]),e._v(" "),t("p",[e._v("针对这些情况只能用定时器不断地检查是否打开了控制台，打开则刷新页面，达到无法正常使用的目的。")]),e._v(" "),t("h3",{attrs:{id:"检查办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查办法"}},[e._v("#")]),e._v(" 检查办法")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("通过页面宽度")]),e._v(" "),t("p",[e._v("这种如果控制台选择另开窗口的方式就无效了，所以也不贴代码了。")])]),e._v(" "),t("li",[t("p",[e._v("通过设置对象的属性的getter方法")]),e._v(" "),t("p",[e._v("当控制台在输出的某个对象时，是会去get对象属性的，因此会调用到属性的getter。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function checkDebugByGetter () {\n    var checkStatus;\n    var element = document.createElement('any');\n    element.__defineGetter__('id', function() {\n        checkStatus = 'on';\n    });\n    var interval = setInterval(function() {\n        checkStatus = 'off';\n        console.log(element);\n        console.clear();\n        if (checkStatus === 'on') {\n            clearInterval(interval)\n            window.location.reload()\n        }\n    }, 1000)\n}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("通过debugger")]),e._v(" "),t("p",[e._v("打开了控制台的情况下，代码有debugger时就会进入断点，但是还是可以选中dom的，要看还是看得到，不如刷新直接")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function checkDebugByDebugTime() {\n    function testDebuger() {\n        var d = new Date();\n        debugger;\n        if (new Date() - d > 10) {\n            window.location.reload();\n            return true;\n        }\n        return false;\n    }\n    function start() {\n        while (testDebuger()) {\n            testDebuger();\n        }\n    }\n    if (!testDebuger()) {\n        window.onblur = function () {\n            setTimeout(function () {\n                start();\n            }, 500)\n        }\n    }else {\n        start();\n    }\n}\n")])])])])]),e._v(" "),t("h2",{attrs:{id:"禁用js的情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#禁用js的情况"}},[e._v("#")]),e._v(" 禁用js的情况")]),e._v(" "),t("p",[e._v("可以通过禁用js跳过js的判断打开控制台，但是如今的项目绝大多数都是通过客户端渲染页面的，禁用js页面也就不会生效了，可以不用考虑。")]),e._v(" "),t("h2",{attrs:{id:"最终源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最终源码"}},[e._v("#")]),e._v(" 最终源码")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("window.onkeydown = window.onkeyup = window.onkeypress = function (event) {\n    // 判断是否按下F12，F12键码为123\n    if (event.keyCode = 123) {\n        event.preventDefault(); // 阻止默认事件行为\n        window.event.returnValue = false;\n    }\n}\n// 为右键添加自定义事件，可以禁用\nwindow.oncontextmenu = function() {\n    event.preventDefault(); // 阻止默认事件行为\n    return false;\n}\n    \n// 通过设置对象的属性的getter方法\n// 原理：当控制台在输出的某个对象时，是会去get对象属性的，因此会调用到属性的getter。\nfunction checkDebugByGetter () {\n    var checkStatus;\n    var element = document.createElement('any');\n    element.__defineGetter__('id', function() {\n        checkStatus = 'on';\n    });\n    var interval = setInterval(function() {\n        checkStatus = 'off';\n        console.log(element);\n        console.clear();\n        if (checkStatus === 'on') {\n            clearInterval(interval)\n            window.location.reload()\n        }\n    }, 1000)\n}\ncheckDebugByGetter();\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);