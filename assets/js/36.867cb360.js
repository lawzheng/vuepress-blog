(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{443:function(t,n,i){"use strict";i.r(n);var s=i(38),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"基于高德搭建选址组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于高德搭建选址组件"}},[t._v("#")]),t._v(" 基于高德搭建选址组件")]),t._v(" "),n("p",[t._v("先来看看效果")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://lyck-image.oss-cn-shenzhen.aliyuncs.com/share/img/gift/detail/QQ%E6%88%AA%E5%9B%BE20200924094637.png",alt:""}})]),t._v(" "),n("p",[t._v("主要有几个功能：")]),t._v(" "),n("ol",[n("li",[t._v("打开时定位")]),t._v(" "),n("li",[t._v("如果有传入地址则跳转至该地址")]),t._v(" "),n("li",[t._v("选省市区，然后地图跳到选择区域并画出来")]),t._v(" "),n("li",[t._v("启动拖动选址功能")]),t._v(" "),n("li",[t._v("根据选址自动变换省市区及详细地址")])]),t._v(" "),n("h2",{attrs:{id:"初始化高德"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化高德"}},[t._v("#")]),t._v(" 初始化高德")]),t._v(" "),n("h3",{attrs:{id:"挂载高德js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#挂载高德js"}},[t._v("#")]),t._v(" 挂载高德js")]),t._v(" "),n("p",[t._v("这里选择的是回调的方法，密钥自行去官网获取")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("async beforeCreate () {\n  window.onLoad = () => {\n    this.init()\n  }\n  const url = `https://webapi.amap.com/maps?v=2.0&key=${AMapKey}&callback=onLoad`\n  const jsapi = document.createElement('script')\n  jsapi.charset = 'utf-8'\n  jsapi.src = url\n  document.head.appendChild(jsapi)\n},\n")])])]),n("p",[t._v("在主js加载完成后加载样式的js，并初始化地图实例")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("async init () {\n  await this.utils.getScript(`//webapi.amap.com/ui/1.1/main.js`)\n  this.initAMap()\n},\n")])])]),n("h3",{attrs:{id:"初始化主逻辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化主逻辑"}},[t._v("#")]),t._v(" 初始化主逻辑")]),t._v(" "),n("p",[t._v("从父组件传入的信息中获取经纬度、城市等信息")]),t._v(" "),n("ul",[n("li",[t._v("如果没经纬度则走选地址\n"),n("ol",[n("li",[t._v("先初始化一个地图实例")]),t._v(" "),n("li",[t._v("如果没有需要移动去的城市id，则调用定位，显示定位动画")]),t._v(" "),n("li",[t._v("定位完成后纪录经纬度，并根据经纬度查找中文地址以及找出公司自己的城市id")])])]),t._v(" "),n("li",[t._v("有经纬度则初始化时传入，并渲染一个标记出来，下文有帖代码")]),t._v(" "),n("li",[t._v("然后初始化一些插件")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("initAMap () {\n  this.latitude = this.mapConfig.latitude\n  this.longitude = this.mapConfig.longitude\n  this.searchText = this.mapConfig.city\n  if (window.AMap) {\n    const AMap = window.AMap\n    if (!this.mapConfig.latitude || !this.mapConfig.longitude) {\n      // 没经纬度表示是选地址\n      this.map = new AMap.Map('map', {\n        resizeEnable: true,\n        zoom: 14,\n        viewMode: '3D'\n      })\n      if (!this.mapConfig.moveToAreaId) {\n        this.showLoading = true\n        AMap.plugin('AMap.Geolocation', () => {\n          let geolocation = new AMap.Geolocation({\n            enableHighAccuracy: true, // 是否使用高精度定位，默认:true\n            timeout: 10000,          // 超过10秒后停止定位，默认：无穷大\n            maximumAge: 0,           // 定位结果缓存0毫秒，默认：0\n            convert: true,           // 自动偏移坐标，偏移后的坐标为高德坐标，默认：true\n            showButton: true,        // 显示定位按钮，默认：true\n            buttonPosition: 'LB',    // 定位按钮停靠位置，默认：'LB'，左下角\n            buttonOffset: new AMap.Pixel(100, 200), // 定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\n            showMarker: true,        // 定位成功后在定位到的位置显示点标记，默认：true\n            showCircle: true,        // 定位成功后用圆圈表示定位精度范围，默认：true\n            panToLocation: true,     // 定位成功后将定位到的位置作为地图中心点，默认：true\n            zoomToAccuracy: true      // 定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n          })\n          this.map.addControl(geolocation)\n          geolocation.getCurrentPosition((status, result) => {\n            if (status === 'complete') {\n              this.onComplete(result)\n            } else {\n              this.onError(result)\n            }\n            this.showLoading = false\n          })\n        })\n      }\n    } else {\n      // 有经纬度表示是显示该地址\n      this.map = new AMap.Map('map', {\n        center: [this.mapConfig.longitude, this.mapConfig.latitude],\n        resizeEnable: true,\n        zoom: 14,\n        viewMode: '3D'\n      })\n      this.$nextTick(() => {\n        this.renderMarker([this.mapConfig.longitude, this.mapConfig.latitude])\n      })\n    }\n    this.setMapPlugin(AMap)\n    // 选地址时才绑定poi搜索\n    if (this.mapConfig.showSearchBox) {\n      this.bindDragMapFunc(!this.mapConfig.moveToAreaId)\n      this.bindEvent()\n      // this.bindClick(this.map)\n    }\n    if (this.mapConfig.moveToAreaId) {\n      this.$emit('areaChange', this.findCityNameByAreaId(this.mapConfig.areaId), this.mapConfig.areaId, '', true)\n    }\n  }\n},\n")])])]),n("h4",{attrs:{id:"生成marker标记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成marker标记"}},[t._v("#")]),t._v(" 生成marker标记")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/**\n * 生成marker标记\n * @param lngLat\n */\nrenderMarker (lngLat) {\n  const AMap = window.AMap\n  /* eslint-disable */\n  if (AMap && this.map) {\n    this.positionPicker && this.positionPicker.stop()\n    this.marker && this.map.remove(this.marker)\n    // const icon = new AMap.Icon({\n    //   size: new AMap.Size(30, 40),    // 图标尺寸\n    //   image: '//image.greenplayer.cn/share/img/icon/icon_court.svg',  // Icon的图像\n    //   // imageOffset: new AMap.Pixel(0, -60),  // 图像相对展示区域的偏移量，适于雪碧图等\n    //   imageSize: new AMap.Size(30, 40)   // 根据所设置的大小拉伸或压缩图片\n    // });\n    this.marker = new AMap.Marker({\n      map: this.map,\n      position: lngLat\n      // icon: icon\n    })\n    // this.map.setFitView()\n    this.map.setCenter(lngLat)\n    this.map.on('touchstart', () => {\n      this.positionPicker && !this.positionPicker.started && this.positionPicker.start()\n      this.map.clearEvents('touchstart')\n    })\n  }\n},\n")])])]),n("h4",{attrs:{id:"初始化插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化插件"}},[t._v("#")]),t._v(" 初始化插件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("setMapPlugin (AMap) {\n  let plugins = ['AMap.ToolBar', 'AMap.Geolocation', 'AMap.ControlBar', 'AMap.DistrictSearch']\n  AMap.plugin(plugins, () => {\n    this.map.addControl(new AMap.ToolBar())\n    this.map.addControl(new AMap.Geolocation({\n      position: {\n        left: '0.4rem',\n        bottom: '0.4rem'\n      }\n    }))\n    this.map.addControl(new AMap.ControlBar({\n      position: {\n        right: '0.3rem',\n        top: '1.2rem'\n      },\n      showControlButton: true  // 是否显示倾斜、旋转按钮。默认为 true\n    }))\n  })\n},\n")])])]),n("h4",{attrs:{id:"启用拖动选点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启用拖动选点"}},[t._v("#")]),t._v(" 启用拖动选点")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/**\n * 拖动选点\n */\nbindDragMapFunc (setInfo = true) {\n  this.poiPicker = null\n  const AMapUI = window.AMapUI\n  // 加载PositionPicker，loadUI的路径参数为模块名中 'ui/' 之后的部分\n  AMapUI.loadUI(['misc/PositionPicker'], (PositionPicker) => {\n    this.positionPicker = new PositionPicker({\n      mode: 'dragMap', // 设定为拖拽地图模式，可选'dragMap'、'dragMarker'，默认为'dragMap'\n      map: this.map // 依赖地图对象\n    })\n    this.positionPicker.on('success', (positionResult) => {\n      console.log('positionResult', positionResult)\n      if (setInfo) {\n        this.getPosition(positionResult.position)\n        this.lngGetNames(positionResult.regeocode, true)\n      }\n      // this.renderMarker([positionResult.position.lng, positionResult.position.lat])\n    })\n    this.positionPicker.on('fail', (positionResult) => {\n      // 海上或海外无法获得地址信息\n    })\n    this.positionPicker.start()\n    if (setInfo) {\n    }\n  })\n},\n")])])]),n("h4",{attrs:{id:"监听事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监听事件"}},[t._v("#")]),t._v(" 监听事件")]),t._v(" "),n("p",[t._v("主要用在搜索后，拖动地图或点击等事件中隐藏搜索列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/**\n * 地图事件，如果有显示搜索列表，则隐藏\n */\nbindEvent () {\n  const eventList = ['click', 'mapmove', 'mousewheel']\n  eventList.forEach(item => {\n    this.map.on(item, () => {\n      if (this.showSearchList) this.showSearchList = false\n    })\n  })\n  this.$on('hook:beforeDestroy', () => {\n    eventList.forEach(item => {\n      this.map.clearEvents(item)\n    })\n  })\n},\n")])])]),n("h3",{attrs:{id:"画出所选行政区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#画出所选行政区"}},[t._v("#")]),t._v(" 画出所选行政区")]),t._v(" "),n("ol",[n("li",[t._v("没有初始化时先初始化")]),t._v(" "),n("li",[t._v("根据自家城市选择器传来的地区，获取区域级别（省市区），并给行政区搜索插件设置上")]),t._v(" "),n("li",[t._v("搜索传入的最小的行政区，有结果后清除上一次画的区域")]),t._v(" "),n("li",[t._v("这里注意返回结果可能存在多个，于是根据选的区域找真实的那个")]),t._v(" "),n("li",[t._v("画出区域")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/**\n * 选择城市后打标记并移过去\n */\nmapToChooseCity () {\n  this.positionPicker && this.positionPicker.stop()\n  const AMap = window.AMap\n  if (!this.district) {\n    var opts = {\n      subdistrict: 0,   // 获取边界不需要返回下级行政区\n      extensions: 'all',  // 返回行政区边界坐标组等具体信息\n      level: 'district'  // 查询行政级别为 市\n    }\n    this.district = new AMap.DistrictSearch(opts)\n  }\n  const cityList = this.mapConfig.areaName.split(' ').filter(item => item)\n  const addressLevel = ['province', 'city', 'district']\n  const address = cityList[cityList.length - 1]\n  // 行政区查询\n  this.district.setLevel(addressLevel[cityList.length - 1])\n  this.district.search(address, (status, result) => {\n    this.map.remove(this.polygons)// 清除上次结果\n    this.polygons = []\n    const list = result.districtList\n    if (list) {\n      let findItemIndex = 0\n      if (list.length > 0) {\n        // 全国名字有多个时，查具体地址，然后比对省，找出对的\n        let promiseList = []\n        list.forEach(item => {\n          promiseList.push(this.findItemDetailAddress(item))\n        })\n        Promise.all(promiseList).then(x => {\n          const realCityIndex = x.findIndex(city => {\n            return city.regeocode.addressComponent.province.includes(cityList[0])\n          })\n          if (realCityIndex !== -1) {\n            findItemIndex = realCityIndex\n          }\n          this.drawCityArea(result.districtList[findItemIndex])\n        })\n      } else {\n        this.drawCityArea(result.districtList[findItemIndex])\n      }\n    }\n  })\n},\n")])])]),n("p",[t._v("画区域很简单，官网直接有例子的")]),t._v(" "),n("p",[t._v("地图移动有个过程，于是延迟再执行拖动选点")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("drawCityArea (findItem) {\n  const AMap = window.AMap\n  var bounds = findItem.boundaries\n  if (bounds) {\n    for (var i = 0, l = bounds.length; i < l; i++) {\n      // 生成行政区划polygon\n      this.polygon = new AMap.Polygon({\n        strokeWeight: 1,\n        path: bounds[i],\n        fillOpacity: 0.4,\n        fillColor: '#80d8ff',\n        strokeColor: '#0091ea'\n      })\n      this.polygons.push(this.polygon)\n    }\n  }\n  this.map.add(this.polygons)\n  this.map.setFitView(this.polygons)// 视口自适应\n  setTimeout(() => {\n    this.positionPicker.start()\n  }, 1500)\n},\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);